<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/data/mongo
       http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
       http://www.springframework.org/schema/data/repository
       http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
    <context:component-scan base-package="com.wangjunneil.schedule"/>
    <bean class="com.wangjunneil.schedule.bootstrap.Initialize"></bean>
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location"><value>classpath:server.properties</value></property>
    </bean>
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="5242880"/><!--5M-->
    </bean>
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/tmall/**" />
            <mvc:mapping path="/jd/**" />
            <mvc:exclude-mapping path="/tmall/callback"/>
            <mvc:exclude-mapping path="/jd/callback"/>
            <bean  class="com.wangjunneil.schedule.interceptor.AccessController">
                <property name="whitelist" value="${server.http.whiteList}"></property>
            </bean>
        </mvc:interceptor>
        <!--<mvc:interceptor>-->
        <!--<mvc:mapping path="/tmall/**" />-->
        <!--<mvc:mapping path="/jd/**" />-->
        <!--<mvc:mapping path="/cms/**" />-->
        <!--<mvc:exclude-mapping path="/tmall/callback"/>-->
        <!--<mvc:exclude-mapping path="/jd/callback"/>-->
        <!--<mvc:exclude-mapping path="/cms/login.php"/>-->
        <!--<bean  class="com.wangjunneil.schedule.interceptor.SessionController" />-->
        <!--</mvc:interceptor>-->
    </mvc:interceptors>
    <bean  class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
    </bean>
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="com.wangjunneil.schedule.servlet.GsonHttpMessageConverterEx" />
            </list>
        </property>
    </bean>
    <!-- =================================== mongodb配置 =================================== -->
    <!--不通过权限验证配置-->
    <!--<mongo:mongo host="${mongo.db.host}" port="${mongo.db.port}">
        &lt;!&ndash;<mongo:options connections-per-host="100"/>&ndash;&gt;
    </mongo:mongo>
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg ref="mongo"/>
        <constructor-arg name="databaseName" value="${mongo.db.name}"/>
    </bean>-->
    <!--需通过权限验证配置-->
    <mongo:mongo-client id="mongo" host="${mongo.db.host}" port="${mongo.db.port}" credentials="${mongo.db.user}:${mongo.db.pass}@${mongo.db.name}" >
        <mongo:client-options write-concern="SAFE"/>
    </mongo:mongo-client>
    <mongo:db-factory  id="mongoDbFactory" dbname="${mongo.db.name}" mongo-ref="mongo" />
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
    </bean>

    <!--======================================================ziYan MQ==============================================================================-->
    <!--================Producer 生产者==================================-->
    <!--topic消息发布者  WaiMai Order-->
    <bean id="topicMessageProducerWaiMaiOrder" class="com.wangjunneil.schedule.activemq.Topic.TopicMessageProducer">
        <property name="topicJmsTemplate" ref="topicJmsTemplate"></property>
    </bean>
    <!--topic消息发布者  WaiMai Order-->
    <bean id="topicMessageProducerWaiMaiOrderAsync" class="com.wangjunneil.schedule.activemq.Topic.TopicMessageProducerAsync">
        <property name="topicJmsTemplate" ref="topicJmsTemplate" ></property>
        <property name="destination"  ref="topicDestinationWaiMaiOrder"></property>
        <property name="message" value="false" ></property>
    </bean>
    <!--topic消息发布者  WaiMai Order Status-->
    <bean id="topicMessageProducerWaiMaiOrderStatus" class="com.wangjunneil.schedule.activemq.Topic.TopicMessageProducer">
        <property name="topicJmsTemplate" ref="topicJmsTemplate2OrdreStatus"></property>
    </bean>
    <bean id="topicMessageProducerWaiMaiOrderStatusAsync" class="com.wangjunneil.schedule.activemq.Topic.TopicMessageProducerAsync" >
        <property name="topicJmsTemplate" ref="topicJmsTemplate2OrdreStatus"></property>
        <property name="destination"  ref="topicDestinationWaiMaiOrderStatus" ></property>
        <property name="message" value="true"></property>
    </bean>
    <!--topic消息发布者  WaiMai Order StatusAll-->
    <bean id="topicMessageProducerWaiMaiOrderStatusAll" class="com.wangjunneil.schedule.activemq.Topic.TopicMessageProducer">
        <property name="topicJmsTemplate" ref="topicJmsTemplate2OrdreStatusAll"></property>
    </bean>
    <bean id="topicMessageProducerWaiMaiOrderStatusAllSync" class="com.wangjunneil.schedule.activemq.Topic.TopicMessageProducerAsync">
        <property name="topicJmsTemplate" ref="topicJmsTemplate2OrdreStatusAll" ></property>
        <property name="destination" ref="topicDestinationWaiMaiOrderStatusAll" ></property>
        <property name="message" value="false" ></property>
    </bean>
    <!--topic消息发布者  ekp message-->
    <bean id="ekpMessageProducerMessage" class="com.wangjunneil.schedule.activemq.Topic.EkpMessageProducer">
        <property name="ekpJmsTemplate" ref="ekpJmsTemplate"></property>
    </bean>
    <!--================================================================-->

    <!--================Destination 目的地Broker===========================-->
    <!--order(订单) 6台MQ目的地址-->
    <bean id="topicDestinationWaiMaiOrder" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg>
            <value>${mq.topic.destination.waimai.order}</value>
        </constructor-arg>
    </bean>

    <!--orderStatus(订单状态) -->
    <bean id="topicDestinationWaiMaiOrderStatus" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg>
            <value>${mq.topic.destination.waimai.order.status}</value>
        </constructor-arg>
    </bean>
    <!--orderStatusAll(整单) -->
    <bean id="topicDestinationWaiMaiOrderStatusAll" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg>
            <value>${mq.topic.destination.waimai.order.statusAll}</value>
        </constructor-arg>
    </bean>
    <!--exception message(异常日志) -->
    <bean id="ekpDestinationException" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="${mq.ekp.exceptionMessage.topic.name}?consumer.prefetchSize=100" />
    </bean>
    <!--================================================================-->


    <!--================JmsTemplate====================================-->
    <!-- JmsTemplate  外卖订单 -->
    <bean id="topicJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="topicCachingConnectionFactory" />
        <property name="defaultDestination" ref="topicDestinationWaiMaiOrder" />
        <property name="pubSubDomain" value="true" />
        <property name="pubSubNoLocal" value="true" />
        <property name="deliveryMode" value="1" />
        <property name="receiveTimeout" value="30000" />
    </bean>
    <!-- 第一台模板-->
    <bean id="topicJmsTemplate1" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="topicCachingConnectionFactory1" />
        <property name="defaultDestination" ref="topicDestinationWaiMaiOrder" />
        <property name="pubSubDomain" value="true" />
        <property name="pubSubNoLocal" value="true" />
        <property name="deliveryMode" value="1" />
        <property name="receiveTimeout" value="30000" />
    </bean>
    <!-- 第二台模板-->
    <bean id="topicJmsTemplate2" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="topicCachingConnectionFactory2" />
        <property name="defaultDestination" ref="topicDestinationWaiMaiOrder" />
        <property name="pubSubDomain" value="true" />
        <property name="pubSubNoLocal" value="true" />
        <property name="deliveryMode" value="1" />
        <property name="receiveTimeout" value="30000" />
    </bean>
    <!-- 第三台模板-->
    <bean id="topicJmsTemplate3" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="topicCachingConnectionFactory3" />
        <property name="defaultDestination" ref="topicDestinationWaiMaiOrder" />
        <property name="pubSubDomain" value="true" />
        <property name="pubSubNoLocal" value="true" />
        <property name="deliveryMode" value="1" />
        <property name="receiveTimeout" value="30000" />
    </bean>
    <!-- 第四台模板-->
    <bean id="topicJmsTemplate4" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="topicCachingConnectionFactory4" />
        <property name="defaultDestination" ref="topicDestinationWaiMaiOrder" />
        <property name="pubSubDomain" value="true" />
        <property name="pubSubNoLocal" value="true" />
        <property name="deliveryMode" value="1" />
        <property name="receiveTimeout" value="30000" />
    </bean>
    <!-- 第五台模板-->
    <bean id="topicJmsTemplate5" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="topicCachingConnectionFactory5" />
        <property name="defaultDestination" ref="topicDestinationWaiMaiOrder" />
        <property name="pubSubDomain" value="true" />
        <property name="pubSubNoLocal" value="true" />
        <property name="deliveryMode" value="1" />
        <property name="receiveTimeout" value="30000" />
    </bean>
    <!-- 第六台模板-->
    <bean id="topicJmsTemplate6" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="topicCachingConnectionFactory6" />
        <property name="defaultDestination" ref="topicDestinationWaiMaiOrder" />
        <property name="pubSubDomain" value="true" />
        <property name="pubSubNoLocal" value="true" />
        <property name="deliveryMode" value="1" />
        <property name="receiveTimeout" value="30000" />
    </bean>
    <!--================================================================-->

    <!-- JmsTemplate 外卖订单状态 -->
    <bean id="topicJmsTemplate2OrdreStatus" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="topicCachingConnectionFactory" />
        <property name="defaultDestination" ref="topicDestinationWaiMaiOrderStatus" />
        <property name="pubSubDomain" value="true" />
        <property name="pubSubNoLocal" value="true" />
        <property name="deliveryMode" value="1" />
        <property name="receiveTimeout" value="30000" />
    </bean>
    <!--  JmsTemplate 外卖订单状态（整单）-->
    <bean id="topicJmsTemplate2OrdreStatusAll" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="topicCachingConnectionFactory" />
        <property name="defaultDestination" ref="topicDestinationWaiMaiOrderStatusAll" />
        <property name="pubSubDomain" value="true" />
        <property name="pubSubNoLocal" value="true" />
        <property name="deliveryMode" value="1" />
        <property name="receiveTimeout" value="30000" />
    </bean>
    <!--  JmsTemplate 异常消息-->
    <bean id="ekpJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="ekpCachingConnectionFactory" />
        <property name="defaultDestination" ref="ekpDestinationException" />
        <property name="pubSubDomain" value="true" />
        <property name="pubSubNoLocal" value="true" />
        <property name="deliveryMode" value="1" />
        <property name="receiveTimeout" value="30000" />
    </bean>
    <!--================================================================-->


    <!--===================ActiveMQConnectionFactory======================-->
    <!--Broker   外卖订单、状态-->
    <bean id="topicConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${mq.topic.host.url}" />
        <property name="userName" value="${mq.topic.host.username}" />
        <property name="password" value="${mq.topic.host.password}" />
        <property name="useAsyncSend" value="true"></property>
        <property name="clientIDPrefix"  value="${mq.topic.clientIDPrefix}" />
        <property name="transportListener" ref="topicTransportListenerOrder" />
    </bean>
    <!--第一台 -->
    <bean id="topicConnectionFactory1" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${mq.topic.host.url1}" />
        <property name="userName" value="${mq.topic.host.username}" />
        <property name="password" value="${mq.topic.host.password}" />
        <property name="useAsyncSend" value="true"></property>
        <property name="clientIDPrefix"  value="${mq.topic.clientIDPrefix}" />
        <property name="transportListener" ref="topicTransportListenerOrder" />
    </bean>
    <!--第二台 -->
    <bean id="topicConnectionFactory2" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${mq.topic.host.url2}" />
        <property name="userName" value="${mq.topic.host.username}" />
        <property name="password" value="${mq.topic.host.password}" />
        <property name="useAsyncSend" value="true"></property>
        <property name="clientIDPrefix"  value="${mq.topic.clientIDPrefix}" />
        <property name="transportListener" ref="topicTransportListenerOrder" />
    </bean>
    <!--第三台 -->
    <bean id="topicConnectionFactory3" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${mq.topic.host.url3}" />
        <property name="userName" value="${mq.topic.host.username}" />
        <property name="password" value="${mq.topic.host.password}" />
        <property name="useAsyncSend" value="true"></property>
        <property name="clientIDPrefix"  value="${mq.topic.clientIDPrefix}" />
        <property name="transportListener" ref="topicTransportListenerOrder" />
    </bean>
    <!--第四台 -->
    <bean id="topicConnectionFactory4" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${mq.topic.host.url4}" />
        <property name="userName" value="${mq.topic.host.username}" />
        <property name="password" value="${mq.topic.host.password}" />
        <property name="useAsyncSend" value="true"></property>
        <property name="clientIDPrefix"  value="${mq.topic.clientIDPrefix}" />
        <property name="transportListener" ref="topicTransportListenerOrder" />
    </bean>
    <!--第五台 -->
    <bean id="topicConnectionFactory5" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${mq.topic.host.url5}" />
        <property name="userName" value="${mq.topic.host.username}" />
        <property name="password" value="${mq.topic.host.password}" />
        <property name="useAsyncSend" value="true"></property>
        <property name="clientIDPrefix"  value="${mq.topic.clientIDPrefix}" />
        <property name="transportListener" ref="topicTransportListenerOrder" />
    </bean>
    <!--第六台 -->
    <bean id="topicConnectionFactory6" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${mq.topic.host.url6}" />
        <property name="userName" value="${mq.topic.host.username}" />
        <property name="password" value="${mq.topic.host.password}" />
        <property name="useAsyncSend" value="true"></property>
        <property name="clientIDPrefix"  value="${mq.topic.clientIDPrefix}" />
        <property name="transportListener" ref="topicTransportListenerOrder" />
    </bean>
    <!--Broker   系统异常日志-->
    <bean id="ekpConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${mq.ekp.exceptionMessage.topic.url}" />
        <property name="useAsyncSend" value="true" />
        <property name="alwaysSessionAsync" value="true" />
        <property name="useDedicatedTaskRunner" value="true" />
    </bean>
    <!--================================================================-->


    <!--===================CachingConnectionFactory=======================-->
    <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory 继承了SingleConnectionFactory -->
    <bean id="topicCachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="topicConnectionFactory"></property>
        <property name="sessionCacheSize" value="100"></property>
    </bean>
    <!--第一台 -->
    <bean id="topicCachingConnectionFactory1" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="topicConnectionFactory1"></property>
        <property name="sessionCacheSize" value="100"></property>
    </bean>
    <!--第二台 -->
    <bean id="topicCachingConnectionFactory2" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="topicConnectionFactory2"></property>
        <property name="sessionCacheSize" value="100"></property>
    </bean>
    <!--第三台 -->
    <bean id="topicCachingConnectionFactory3" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="topicConnectionFactory3"></property>
        <property name="sessionCacheSize" value="100"></property>
    </bean>
    <!--第四台 -->
    <bean id="topicCachingConnectionFactory4" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="topicConnectionFactory4"></property>
        <property name="sessionCacheSize" value="100"></property>
    </bean>
    <!--第五台 -->
    <bean id="topicCachingConnectionFactory5" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="topicConnectionFactory5"></property>
        <property name="sessionCacheSize" value="100"></property>
    </bean>
    <!--第六台 -->
    <bean id="topicCachingConnectionFactory6" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="topicConnectionFactory6"></property>
        <property name="sessionCacheSize" value="100"></property>
    </bean>
    <!--==============================end==================================-->

    <bean id="ekpCachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="ekpConnectionFactory"></property>
        <property name="sessionCacheSize" value="100"></property>
    </bean>
    <!--================================================================-->


    <!--===================jms messgae listener container====================-->
    <!--消息侦听适配器-->
    <bean id="messageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
        <property name="delegate">
            <bean class="com.wangjunneil.schedule.activemq.Topic.ConsumerMessageListener"/>
        </property>
        <property name="defaultListenerMethod" value="onMessage"/>
        <property name="defaultResponseDestination" ref="topicDestinationWaiMaiOrder"/>
        <property name="messageConverter">
            <null/>
        </property>
    </bean>

    <!--消息侦听器-->
    <bean id="topicJmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="topicCachingConnectionFactory" />
        <property name="destination" ref="topicDestinationWaiMaiOrder" />
        <property name="messageListener" ref="messageListenerAdapter" />
        <property name="clientId" value="${mq.topic.clientID.waimai.order}" />
        <property name="sessionAcknowledgeModeName" value="AUTO_ACKNOWLEDGE"/>
        <property name="receiveTimeout" value="20000"/>
        <property name="durableSubscriptionName" value="${mq.topic.clientID.waimai.order}" />
        <property name="subscriptionDurable" value="true"  />
    </bean>


    <!--=============TransportListener 传输监控============================-->
    <bean id="topicTransportListenerOrder" class="com.wangjunneil.schedule.activemq.MQTransportListener">
        <property name="destination" value="topicDestinationWaiMaiOrder" />
    </bean>


    <!-- 监听者(Topic) -->
    <bean id="topicMessageListener" class="com.wangjunneil.schedule.activemq.Topic.ConsumerMessageListener" />
    <!--================================================================-->
</beans>
